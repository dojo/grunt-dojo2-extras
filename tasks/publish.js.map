{"version":3,"file":"publish.js","sourceRoot":"","sources":["../../tasks/publish.ts"],"names":[],"mappings":";;;;;;;;;;;IACA,mDAA8C;IAC9C,uCAAkC;IAClC,sDAAiD;IACjD,uDAAyE;IAEzE,OAAS,UAAU,KAAa;QAC/B;;;;;;4BACO,OAAO,GAAG,IAAI,CAAC,OAAO,CAAM;gCACjC,WAAW;oCACV,EAAE,CAAC,CAAC,+BAAiB,EAAE,CAAC,CAAC,CAAC;wCACzB,MAAM,CAAC,yBAAW,EAAE,CAAC;oCACtB,CAAC;oCAED,MAAM,CAAC,MAAM,CAAC;gCACf,CAAC;6BACD,CAAC,CAAC;4BAEG,cAAc,GAAG,KAAK,CAAC,MAAM,CAAS,aAAa,CAAC,CAAC;4BAC3D,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gCACpB,OAAO,CAAC,WAAW,GAAG,cAAc,CAAC;4BACtC,CAAC;4BACD,OAAO,CAAC,IAAI,GAAG,IAAI,aAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;4BAE/C,WAAM,iBAAO,CAAC,OAAO,CAAC,EAAA;;4BAAtB,SAAsB,CAAC;;;;;SACvB;QAED,KAAK,CAAC,iBAAiB,CAAC,SAAS,EAAE,uBAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC","sourcesContent":["import IMultiTask = grunt.task.IMultiTask;\nimport publish from '../src/commands/publish';\nimport Git from '../src/util/Git';\nimport wrapAsyncTask from './util/wrapAsyncTask';\nimport { hasGitCredentials, publishMode } from '../src/util/environment';\n\nexport = function (grunt: IGrunt) {\n\tasync function publishTask(this: IMultiTask<any>) {\n\t\tconst options = this.options<any>({\n\t\t\tpublishMode() {\n\t\t\t\tif (hasGitCredentials()) {\n\t\t\t\t\treturn publishMode();\n\t\t\t\t}\n\n\t\t\t\treturn 'skip';\n\t\t\t}\n\t\t});\n\n\t\tconst publishModeCli = grunt.option<string>('publishmode');\n\t\tif (publishModeCli) {\n\t\t\toptions.publishMode = publishModeCli;\n\t\t}\n\t\toptions.repo = new Git(options.cloneDirectory);\n\n\t\tawait publish(options);\n\t}\n\n\tgrunt.registerMultiTask('publish', wrapAsyncTask(publishTask));\n};\n"]}