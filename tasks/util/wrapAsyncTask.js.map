{"version":3,"file":"wrapAsyncTask.js","sourceRoot":"","sources":["../../../tasks/util/wrapAsyncTask.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,qCAAuC;IAIvC,uBAAyC,IAA2C;QACnF,MAAM,CAAC;YACN,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAQ;gBAC5C,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACP,YAAM,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;gBACzB,CAAC;gBACD,IAAI,CAAC,KAAK,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC;IACH,CAAC;IAVD,gCAUC","sourcesContent":["import { logger } from '../../src/log';\nimport IMultiTask = grunt.task.IMultiTask;\nimport ITask = grunt.task.ITask;\n\nexport default function wrapAsyncTask<T>(task: (this: IMultiTask<T>) => Promise<any>) {\n\treturn function (this: ITask) {\n\t\tconst done = this.async();\n\t\ttask.call(this).then(done, function (e: Error) {\n\t\t\tif (e) {\n\t\t\t\tlogger.error(e.message);\n\t\t\t}\n\t\t\tdone(false);\n\t\t});\n\t};\n}\n"]}