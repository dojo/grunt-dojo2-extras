{"version":3,"file":"getGithubSlug.js","sourceRoot":"","sources":["../../../tasks/util/getGithubSlug.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,0DAA8D;IAe9D,uBAAsC,OAAiB,EAAE,KAAc;QACtE,IAAM,UAAU,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAS,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,8BAAgB,EAAE,CAAC;QACxG,IAAA,gEAA+E,EAA7E,aAAK,EAAE,YAAI,CAAmE;QACtF,MAAM,CAAC;YACN,IAAI,MAAA;YACJ,KAAK,OAAA;SACL,CAAC;IACH,CAAC;IAPD,gCAOC","sourcesContent":["import { repositorySource } from '../../src/util/environment';\n\nexport interface Options {\n\trepo?: string;\n}\n\nexport interface Slug {\n\tname?: string;\n\towner?: string;\n}\n\n/**\n * A standard way of configuring the target Github repository\n * @return {{name: string, owner: string}}\n */\nexport default function getGithubSlug(options?: Options, grunt?: IGrunt): Slug {\n\tconst repoOption = (grunt && grunt.option<string>('repo')) || (options && options.repo) || repositorySource();\n\tconst [ owner, name ] = repoOption ? repoOption.split('/') : [ undefined, undefined ];\n\treturn {\n\t\tname,\n\t\towner\n\t};\n}\n"]}