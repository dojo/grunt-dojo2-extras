{"version":3,"file":"decryptDeployKey.js","sourceRoot":"","sources":["../../../src/commands/decryptDeployKey.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,yCAA6C;IAC7C,yCAA2C;IAC3C,yBAAqE;IAOrE,0BACC,aAA8C,EAC9C,GAA6C,EAC7C,EAA2C,EAC3C,aAAqC;QAHrC,8BAAA,EAAA,gBAAwB,GAAG,CAAC,gBAAgB,EAAE;QAC9C,oBAAA,EAAA,MAAc,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC;QAC7C,mBAAA,EAAA,KAAa,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC;QAC3C,8BAAA,EAAA,gBAAwB,GAAG,CAAC,OAAO,EAAE;;;gBAErC,EAAE,CAAC,CAAC,CAAC,eAAU,CAAC,aAAa,CAAC,IAAI,eAAU,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5E,MAAM,KAAC,KAAK,EAAC;gBACd,CAAC;gBAED,WAAO,IAAI,OAAO,CAAU,UAAU,OAAO,EAAE,MAAM;wBACpD,IAAM,MAAM,GAAG,qBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC/C,IAAM,MAAM,GAAG,sBAAiB,CAAC,aAAa,CAAC,CAAC;wBAEhD,oBAAW,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC;6BAC1B,IAAI,CAAC,MAAM,CAAC;6BACZ,EAAE,CAAC,OAAO,EAAE,UAAU,KAAY;4BAClC,MAAM,CAAC,KAAK,CAAC,CAAC;wBACf,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE;4BACd,OAAO,CAAC,IAAI,CAAC,CAAC;wBACf,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,EAAC;;;KACH;IAtBD,mCAsBC;IAAA,CAAC","sourcesContent":["import { decryptData } from '../util/crypto';\nimport * as env from '../util/environment';\nimport { existsSync, createWriteStream, createReadStream } from 'fs';\n\n/**\n * decrypts a deployment key\n *\n * @return if decryption was carried out\n */\nexport default async function decryptDeployKey(\n\tencryptedFile: string = env.encryptedKeyFile(),\n\tkey: string = process.env[env.decryptKeyName],\n\tiv: string = process.env[env.decryptIvName],\n\tdecryptedFile: string = env.keyFile()\n): Promise<boolean> {\n\tif (!existsSync(encryptedFile) || existsSync(decryptedFile) || !key || !iv) {\n\t\treturn false;\n\t}\n\n\treturn new Promise<boolean>(function (resolve, reject) {\n\t\tconst source = createReadStream(encryptedFile);\n\t\tconst target = createWriteStream(decryptedFile);\n\n\t\tdecryptData(source, key, iv)\n\t\t\t.pipe(target)\n\t\t\t.on('error', function (error: Error) {\n\t\t\t\treject(error);\n\t\t\t}).on('close', function () {\n\t\t\t\tresolve(true);\n\t\t\t});\n\t});\n};\n"]}