{"version":3,"file":"initAuthorization.js","sourceRoot":"","sources":["../../../../../../tests/unit/src/commands/initialize/initAuthorization.ts"],"names":[],"mappings":"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","sourcesContent":["import loadModule, { cleanupModuleMocks } from '../../../../_support/loadModule';\nimport { spy, stub, SinonStub } from 'sinon';\nimport { throwWithError } from '../../../../_support/util';\n\nconst { registerSuite } = intern.getInterface('object');\nconst { assert } = intern.getPlugin('chai');\n\nlet initAuthorization: any;\n\nconst isAuthorizedStub = stub();\nconst travisCreateAuthorizationStub = stub();\nconst travisDeleteAuthorizationStub = stub();\nconst listEnvironmentVariablesStub = stub();\nconst setEnvironmentVariablesStub = stub();\nconst fetchRepositoryStub = stub();\nconst authenticateStub = stub();\nconst getRateLimitStub = stub();\nconst toStringStub = stub();\nconst repoCreateAuthorizationStub = stub();\nconst repoDeleteAuthorizationStub = stub();\nconst findStub = stub();\nconst githubAuthStub = stub();\n\nconst Travis = class {\n\tconstructor() {}\n\tisAuthorized: SinonStub = isAuthorizedStub;\n\tcreateAuthorization: SinonStub = travisCreateAuthorizationStub;\n\tdeleteAuthorization: SinonStub = travisDeleteAuthorizationStub;\n\tfetchRepository: SinonStub = fetchRepositoryStub;\n};\n\nconst GitHub = class {\n\tconstructor() {}\n\towner = 'dojo';\n\tname = 'grunt-dojo2-extras';\n\tapi: any = {\n\t\tauthenticate: authenticateStub,\n\t\tmisc: {\n\t\t\tgetRateLimit: getRateLimitStub\n\t\t}\n\t};\n\ttoString: SinonStub = toStringStub;\n\tcreateAuthorization = repoCreateAuthorizationStub;\n\tdeleteAuthorization = repoDeleteAuthorizationStub;\n};\n\nconst TravisSpy = spy(Travis);\nconst GitHubSpy = spy(GitHub);\n\nregisterSuite('commands/initialize/initAuthorization', {\n\tafter() {\n\t\tcleanupModuleMocks();\n\t},\n\n\tbeforeEach() {\n\t\ttravisCreateAuthorizationStub.returns(Promise.resolve());\n\t\ttravisDeleteAuthorizationStub.returns(Promise.resolve());\n\t\tfetchRepositoryStub.returns(Promise.resolve({\n\t\t\tlistEnvironmentVariables: listEnvironmentVariablesStub.returns(Promise.resolve([])),\n\t\t\tsetEnvironmentVariables: setEnvironmentVariablesStub.returns(Promise.resolve())\n\t\t}));\n\t\tgetRateLimitStub.returns(Promise.resolve());\n\t\trepoCreateAuthorizationStub.returns(Promise.resolve({\n\t\t\ttoken: 'token'\n\t\t}));\n\t\trepoDeleteAuthorizationStub.returns(Promise.resolve());\n\n\t\tinitAuthorization = loadModule(require, '../../../../../src/commands/initialize/initAuthorization', {\n\t\t\t'../../util/Travis': { default: TravisSpy },\n\t\t\t'../../util/GitHub': { default: GitHubSpy },\n\t\t\t'@dojo/shim/array': {\n\t\t\t\tfind: findStub\n\t\t\t},\n\t\t\t'../../util/environment': {\n\t\t\t\tenv: {\n\t\t\t\t\tgithubAuth: githubAuthStub\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tafterEach() {\n\t\tTravisSpy.reset();\n\t\tGitHubSpy.reset();\n\t\tisAuthorizedStub.reset();\n\t\ttravisCreateAuthorizationStub.reset();\n\t\ttravisDeleteAuthorizationStub.reset();\n\t\tlistEnvironmentVariablesStub.reset();\n\t\tsetEnvironmentVariablesStub.reset();\n\t\tfetchRepositoryStub.reset();\n\t\tauthenticateStub.reset();\n\t\tgetRateLimitStub.reset();\n\t\ttoStringStub.reset();\n\t\trepoCreateAuthorizationStub.reset();\n\t\trepoDeleteAuthorizationStub.reset();\n\t\tfindStub.reset();\n\t\tgithubAuthStub.reset();\n\t},\n\n\ttests: {\n\t'initAuthorization': (() => {\n\t\treturn {\n\t\t\tasync 'explicit Travis instance'() {\n\t\t\t\tconst travis = new Travis();\n\n\t\t\t\tawait assertInitAuthorization(travis);\n\t\t\t},\n\n\t\t\tasync 'Travis is not authorized'() {\n\t\t\t\tisAuthorizedStub.returns(false);\n\n\t\t\t\tawait assertInitAuthorization();\n\n\t\t\t\tassert.isTrue(travisCreateAuthorizationStub.calledOnce);\n\t\t\t},\n\n\t\t\tasync 'fetch repo and environment, create authorization'() {\n\t\t\t\tawait assertInitAuthorization();\n\n\t\t\t\tassert.isTrue(fetchRepositoryStub.calledOnce);\n\t\t\t\tassert.isTrue(listEnvironmentVariablesStub.calledOnce);\n\t\t\t\tassert.isTrue(findStub.calledOnce);\n\t\t\t\tassert.isTrue(repoCreateAuthorizationStub.calledOnce);\n\t\t\t\tassert.isTrue(setEnvironmentVariablesStub.calledOnce);\n\t\t\t},\n\n\t\t\t'eventually throws'() {\n\t\t\t\tfetchRepositoryStub.returns(Promise.reject(new Error('error')));\n\n\t\t\t\tconst promise = assertInitAuthorization();\n\n\t\t\t\treturn promise.then(\n\t\t\t\t\tthrowWithError('Should reject when fetching repository stub fails'),\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tassert.strictEqual(e.message, 'error');\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\n\t\t\t'delete repo authorization'() {\n\t\t\t\trepoCreateAuthorizationStub.returns(Promise.resolve(true));\n\t\t\t\tsetEnvironmentVariablesStub.returns(Promise.reject(new Error('error')));\n\n\t\t\t\tconst promise = assertInitAuthorization();\n\n\t\t\t\treturn promise.then(\n\t\t\t\t\tthrowWithError('Should reject when setting environment variables fails'),\n\t\t\t\t\t() => {\n\t\t\t\t\t\tassert.isTrue(repoDeleteAuthorizationStub.calledOnce);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tasync function assertInitAuthorization(travis?: any) {\n\t\t\tconst repo = new GitHub();\n\n\t\t\tawait initAuthorization(repo, travis);\n\n\t\t\tif (!travis) {\n\t\t\t\tassert.isTrue(TravisSpy.calledOnce);\n\t\t\t}\n\n\t\t\tassert.isTrue(isAuthorizedStub.calledOnce);\n\t\t\tassert.isTrue(travisDeleteAuthorizationStub.calledOnce);\n\t\t}\n\t})()\n\t}\n});\n"]}